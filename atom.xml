<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Heew’s iOS Blog]]></title>
  <link href="http://heeween.github.io/atom.xml" rel="self"/>
  <link href="http://heeween.github.io/"/>
  <updated>2015-09-02T17:01:44+08:00</updated>
  <id>http://heeween.github.io/</id>
  <author>
    <name><![CDATA[Heew]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SEL和IMP的区别]]></title>
    <link href="http://heeween.github.io/blog/2015-03-02-selhe-impde-qu-bie/"/>
    <updated>2015-03-02T16:58:56+08:00</updated>
    <id>http://heeween.github.io/blog/selhe-impde-qu-bie</id>
    <content type="html"><![CDATA[<h4>1. SEL和IMP</h4>

<p>最早我把SEL理解为函数指针，现在看来，不是这样的。</p>

<h6>1.1 SEL类型</h6>

<p>SEL类型的变量，可以通过@selector(方法名)来取得，当然了，Objective C的方法名，我们也知道了，多么恶心（比Java废话还多）。
而它真正得到的，只要方法名一样，它的值就是一样的，不管这个方法定义于哪个类，是不是实例方法【再说了，@selector的时候，除了方法名也没有什么类啊，对象啊什么事情】。
所以我现在把它理解为“方法名的某种映射结果”。（从C++程序员的眼光看，我觉得没啥可以对应的，既不是函数指针，也不是函数指针类型，像是函数指针类型的名字吧。）</p>

<h6>1.2 IMP类型</h6>

<p>这个才是函数指针，IMP可以从 对象 &amp; SEL的方法得到：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="kt">IMP</span> <span class="n">imp</span> <span class="o">=</span> <span class="p">[</span><span class="nb">self</span> <span class="nl">methodForSelector</span><span class="p">:</span><span class="n">selector</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>这是IMP的定义：
typedef id (*IMP)(id, SEL, );
另外注意NSObject里面的这两个方法：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">IMP</span><span class="p">)</span><span class="nf">methodForSelector:</span><span class="p">(</span><span class="kt">SEL</span><span class="p">)</span><span class="nv">aSelector</span><span class="p">;</span>
</span><span class='line'><span class="p">+</span> <span class="p">(</span><span class="kt">IMP</span><span class="p">)</span><span class="nf">instanceMethodForSelector:</span><span class="p">(</span><span class="kt">SEL</span><span class="p">)</span><span class="nv">aSelector</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h4>2. Objective C可以动态添加方法&hellip;</h4>

<p>class_addMethod，用就行了，转到定义，可以看看其他的方法，也很动态（这也太动态了，Java，C#也不行啊）。
&ldquo;定义于runtime.h&rdquo;</p>

<h4>3. resolveInstanceMethod</h4>

<p>这个方法挺BT的。
我暂时个人理解为方法劫持吧，方法和属性的调用，都会先跑到这里来，具体看文档吧：
<a href="http://www.apple.com.cn/developer/mac/library/documentation/Cocoa/Conceptual/ObjCRuntimeGuide/Articles/chapter_5_section_2.html">http://www.apple.com.cn/developer/mac/library/documentation/Cocoa/Conceptual/ObjCRuntimeGuide/Articles/chapter_5_section_2.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[深入研究CADisplayLink和NSTimer]]></title>
    <link href="http://heeween.github.io/blog/2015-02-27-shen-ru-yan-jiu-cadisplaylinkhe-nstimer/"/>
    <updated>2015-02-27T12:05:24+08:00</updated>
    <id>http://heeween.github.io/blog/shen-ru-yan-jiu-cadisplaylinkhe-nstimer</id>
    <content type="html"><![CDATA[<h3>一、CADisplayLink</h3>

<p>CADisplayLink 是一个定时器对象可以让你的应用以与显示器的刷新界面相同的频率进行绘图。
应用如果想要创建 display link ，需要提供一个目标对象和一个当屏幕刷新时被调用的选择器方法。之后再将 display link 添加到主线程中。
一旦display link与主线程相关联，当屏幕内容需要被刷新的时候目标对象上的选择器方法就会被调用。目标对象可以读取 display link 的时间戳属性去检索下一帧被显示的画面。举个例子，一个执行它自己动画的应用会使用时间戳来确定在哪或者如何去在即将显示的画面中去展示它的对象。duration 属性提供了一个在两个画面之间的间隔时间。你可以在你的应用中使用这个值来估算显示的帧速率，近似下一帧被显示的时间，和调整行为，以便下一帧准备时间显示。
你的应用可以设置 paused 属性为YES来停止通知。同样的，如果你的应用不想用框架所提供的时间，你可以自己选择更慢的帧速率。已提供更慢但是一致的帧速率会比跳帧更加流畅，你可以通过改变 frameInterval 属性来改变改变画面的帧间隔（减少帧速率）。（每几帧调用一次，默认是1，如果是2，对于iOS设备来说那刷新频率就是60HZ也就是每秒60次，如果将 frameInterval 设为2 那么就会两帧调用一次，也就是变成了每秒刷新30次。）
当你的应用想停止 display link ，它应该调用 invalidate 方法去从主线程中移除它并且消除与目标之间的关联。
CADisplayLink 不能被继承。</p>

<h3>二、NSTimer</h3>

<p>使用 NSTimer 类创建定时器对象或者仅仅是计时器。一个计时器每隔一定的时间间隔运行，然后触发，发送给目标对象一个特殊的消息。举例来说，你能够创建一个 NSTimer 对象发送给窗口一个消息，告诉它在一定时间间隔之后更新它自己。
定时器的运行需要结合着 run Loop。为了有效的使用一个定时器，你应该注意如何操作 run loops。请搜索在 Xcode Document 中 NSRunLoop 和 Threading Programming Guide 文章。特别注意，run loops 对它们的定时器保持着强引用，所以你不必去对加到 run loop 中的定时器保持强引用。
计时器并不是一个真正的时间机制；它只有在被添加到循环运行模式中的一种的时候才能触发，此时计时器的触发时间一旦过去就能检查出。由于对各种输入源的一个典型run loop 管理，对于一个定时器的时间间隔的有效解决方案被限制在50-100毫秒，如果一个定时器的触发经历了很长的一段时间或者在一个 run loop 的模式下没能监控到计时器，则这个计时器不会触发直到下一次 run loop 再次检测出这个计时器。因此，真正的计时器触发时间可以在预定触发时间之后的很长一段时间之后。可以看看这篇文章 Timer Tolerance。</p>

<h4>重复计时器与不可重复计时器</h4>

<p>你可以在创建计时器的时候指定它是可重复的还是不可重复的。一个不可重复的计时器只触发一次然后自动销毁，从而防止计时器再次触发。与之相反，一个可重复的计时器会重复在相同的 run loop 中触发。
一个可重复的计时器总是按照预先设计的触发时间执行它自己，而不是实际的出发时间。举个例子，如果一个计时器将在特定的时间每5秒钟之后触发，预定触发时间将总会落后于开始的5秒时间间隔，即使实际的触发时间被推迟。如果到目前为止触发时间被推迟了很久已经错过了一个或者几个触发的时间点，计时器会在下一个触发周期上只触发一次；触发后计时器重新安排，为下一次触发做准备。</p>

<h4>在 Run Loops 中预设定时器</h4>

<p>一个定时器对象只能同事被注册在一个 run loop 中，虽然它能被添加到这个 run loop 中的多个 run loop 模式中去。有三种方式创建：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="nl">scheduledTimerWithTimeInterval</span><span class="p">:</span><span class="nl">invocation</span><span class="p">:</span><span class="nl">repeats</span><span class="p">:</span><span class="n">or</span>
</span><span class='line'><span class="nl">scheduledTimerWithTimeInterval</span><span class="p">:</span><span class="nl">target</span><span class="p">:</span><span class="nl">selector</span><span class="p">:</span><span class="nl">userInfo</span><span class="p">:</span><span class="nl">repeats</span><span class="p">:</span>
</span><span class='line'><span class="c1">// 类方法创建计时器，将它以默认的模式预设在当前的 run loop 中。</span>
</span><span class='line'><span class="nl">timerWithTimeInterval</span><span class="p">:</span><span class="nl">invocation</span><span class="p">:</span><span class="nl">repeats</span><span class="p">:</span><span class="n">or</span>
</span><span class='line'><span class="nl">timerWithTimeInterval</span><span class="p">:</span><span class="nl">target</span><span class="p">:</span><span class="nl">selector</span><span class="p">:</span><span class="nl">userInfo</span><span class="p">:</span><span class="nl">repeats</span><span class="p">:</span>
</span><span class='line'><span class="c1">// 类方法创建而没在 run loop 中预设它</span>
</span><span class='line'><span class="c1">//（创建之后，你必须将它添加到 run loop 中去，使用相应的 NSRunLoopaddTimer :forMode方法）</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// 初始化计时器方法</span>
</span><span class='line'><span class="nl">initWithFireDate</span><span class="p">:</span><span class="nl">interval</span><span class="p">:</span><span class="nl">target</span><span class="p">:</span><span class="nl">selector</span><span class="p">:</span><span class="nl">userInfo</span><span class="p">:</span><span class="nl">repeats</span><span class="p">:</span>
</span></code></pre></td></tr></table></div></figure>


<p>一旦在 run loop 中预设了定时器，定时器就会在制定的时间间隔触发直到它被销毁。一个不重复的计时器会在触发之后自动被销毁。然而，对于一个重复的计时器，你必须调用它的 invaludate 方法来销毁它。调用这个方法会请求在 当前的 run loop 中将计时器移除；所以，你应该总在创建计时器的线程中来调用 invalidate 方法来销毁它。销毁计时器之后会立即让它无效所以不会再影响 run loop。然后在移除方法之前或者晚一点点 run loop 会将计时器移除（与它的强引用一起移除），一旦被移除，计时器对象就不能再使用。
子类注意
不能够继承 NSTimer。</p>

<h4>Timer Tolerance：</h4>

<p>在 iOS 7之后，你能够为定时器指定一个公差。让系统在计时器触发的时候更加灵活的提升优化系统并增加它的存储和响应的能力。计时器会在预定的时间和预定时间加上公差时间之内触发计时器。计时器不会在预定时间之前触发。对于重复计时器为了避免漂移，下次的触发时间是根据原始的触发时间所估算出来而公差只应用于单次的触发时间。默认值是0，意味着没有更多的公差。系统有权利对于一些计算器使用少量的公差而不管公差的属性值是多少。
作为计时器的使用者，也许你有一个对于计时器最合适的公差。一般的经验是对于可重复的计时器设置公差至少有10%的时间间隔。即使少量的公差也将对应用程序产生重大的积极影响。系统可能为公差设置一个最大值。</p>

<h4>Toll-Free Bridging:</h4>

<p>在Core Foundation框架和 Foundation 框架中有许多种数据类型可以被互换着使用。这种能力，被称为： Toll-Free Bridging，意味着你能够使用相同的数据类型作为 Core Foundation 方法调用的参数也可以作为一个OC 方法传递的接受者。举个例子：NSLocale 相对 Core Foundation 是的互换的类型是 CFLocale。因此，如果一个方法中的参数是 NSLocale* 类型的时候，你可以传递过去一个 CFLocaleRef，并且如果方法中的参数是 CGLocaleRef 参数，你可以传递过去一个 NSLocale 实例。</p>

<h4>NSRunLoop：</h4>

<p>NSRunLoop 类的声明是对于输入源的面向对象的编程思想。一个NSRunloop 对象处理着来自窗口系统、NSPort 对象和 NSConnection 对象的像鼠标或键盘事件的输入源。一个 NSRunloop 对象也能够处理 NSTimer 事件。
你的应用不能够创建或者显示的管理 NSRunLoop 对象。每个 NSThread 对象，包括应用的主线程，都有一个 NSRunLoop 对象由于需求被自动的创建。如果你需要访问当前线程的 run loop，你可以对 currentRunLoop 类做操作。
注意从 NSRunLoop的角度来看， NSTimer 对象并不是“输入源” - 他们是一种特殊类型，这意味着它们不会在触发的时候引起 run loop 返回。
注意： NSRunLoop 类一般不认为是线程安全的，其方法应该只在其当前的线程上下文中被调用。你不能尝试在别的线程中去调用 NSRunLoop 对象的方法，如果这样做将导致无法预料的结果。
小结
在动画中最好用CADisplayLink，因为由于每秒的刷新频率较高，所以用它所生成的动画会显得非常流畅。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[二维码制作]]></title>
    <link href="http://heeween.github.io/blog/2015-02-19-er-wei-ma-zhi-zuo/"/>
    <updated>2015-02-19T09:22:09+08:00</updated>
    <id>http://heeween.github.io/blog/er-wei-ma-zhi-zuo</id>
    <content type="html"><![CDATA[<h3>从iOS7开始集成了二维码的生成和读取功能</h3>

<h3>此前被广泛使用的zbarsdk目前不支持64位处理器</h3>

<p>0.导入CoreImage框架</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">/</span><span class="err">#</span><span class="n">import</span> <span class="o">&lt;</span><span class="n">CoreImage</span><span class="o">/</span><span class="n">CoreImage</span><span class="p">.</span><span class="n">h</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>1.实例化二维码滤镜</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">CIFilter</span> <span class="o">*</span><span class="n">fiter</span> <span class="o">=</span> <span class="p">[</span><span class="bp">CIFilter</span> <span class="nl">filterWithName</span><span class="p">:</span><span class="s">@&quot;CIQRCodeGenerator&quot;</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>2.恢复滤镜的默认属性</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="n">fiter</span> <span class="n">setDefaults</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>3.将字符串转换成NSData</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">NSString</span> <span class="o">*</span><span class="n">inputData</span> <span class="o">=</span> <span class="s">@&quot;http://www.520it.com&quot;</span><span class="p">;</span>
</span><span class='line'><span class="bp">NSData</span> <span class="o">*</span><span class="n">data</span> <span class="o">=</span> <span class="p">[</span><span class="n">inputData</span> <span class="nl">dataUsingEncoding</span><span class="p">:</span><span class="n">NSUTF8StringEncoding</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>4.通过KVO设置滤镜inputMessage数据</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="n">fiter</span> <span class="nl">setValue</span><span class="p">:</span><span class="n">data</span> <span class="nl">forKeyPath</span><span class="p">:</span><span class="s">@&quot;inputMessage&quot;</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>5.获得滤镜输出的图像</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">CIImage</span> <span class="o">*</span><span class="n">outputImage</span> <span class="o">=</span> <span class="p">[</span><span class="n">fiter</span> <span class="n">outputImage</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>6.将CIImage转换成UIImage，并放大显示</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="nb">self</span><span class="p">.</span><span class="n">imageView</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="nb">self</span> <span class="nl">createNonInterpolatedUIImageFormCIImage</span><span class="p">:</span><span class="n">outputImage</span> <span class="nl">withSize</span><span class="p">:</span><span class="mi">200</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://heeween.github.io/images/Snip20150819_1.png" alt="" /></p>

<h2>读取二维码需要导入AVFoundation框架</h2>

<h2>利用摄像头识别二维码中的内容(模拟器不行)</h2>

<p>1.实例化拍摄设备</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">AVCaptureDevice</span> <span class="o">*</span><span class="n">device</span> <span class="o">=</span> <span class="p">[</span><span class="bp">AVCaptureDevice</span> <span class="nl">defaultDeviceWithMediaType</span><span class="p">:</span><span class="n">AVMediaTypeVideo</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>2.设置输入设备</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">AVCaptureDeviceInput</span> <span class="o">*</span><span class="n">input</span> <span class="o">=</span> <span class="p">[</span><span class="bp">AVCaptureDeviceInput</span> <span class="nl">deviceInputWithDevice</span><span class="p">:</span><span class="n">device</span> <span class="nl">error</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>3.设置元数据输出</p>

<blockquote><p>3.1 实例化拍摄元数据输出</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">AVCaptureMetadataOutput</span> <span class="o">*</span><span class="n">output</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">AVCaptureMetadataOutput</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>3.2 设置输出数据代理</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="n">output</span> <span class="nl">setMetadataObjectsDelegate</span><span class="p">:</span><span class="nb">self</span> <span class="nl">queue</span><span class="p">:</span><span class="n">dispatch_get_main_queue</span><span class="p">()];</span>
</span></code></pre></td></tr></table></div></figure>


<p>4.添加拍摄会话</p>

<blockquote><p>4.1 实例化拍摄会话</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">AVCaptureSession</span> <span class="o">*</span><span class="n">session</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">AVCaptureSession</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>4.2 添加会话输入</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="n">session</span> <span class="nl">addInput</span><span class="p">:</span><span class="n">input</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>4.3 添加会话输出</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="n">session</span> <span class="nl">addOutput</span><span class="p">:</span><span class="n">output</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>4.4 设置输出数据类型，需要将元数据输出添加到会话后，才能指定元数据类型，否则会报错</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="n">output</span> <span class="nl">setMetadataObjectTypes</span><span class="p">:</span><span class="l">@[</span><span class="n">AVMetadataObjectTypeQRCode</span><span class="l">]</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>5.视频预览图层</p>

<blockquote><p>5.1 实例化预览图层</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">AVCaptureVideoPreviewLayer</span> <span class="o">*</span><span class="n">preview</span> <span class="o">=</span> <span class="p">[</span><span class="bp">AVCaptureVideoPreviewLayer</span> <span class="nl">layerWithSession</span><span class="p">:</span><span class="n">session</span><span class="p">];</span>
</span><span class='line'><span class="n">preview</span><span class="p">.</span><span class="n">videoGravity</span> <span class="o">=</span> <span class="n">AVLayerVideoGravityResizeAspectFill</span><span class="p">;</span>
</span><span class='line'><span class="n">preview</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">bounds</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>5.2 将图层插入当前视图</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">view</span><span class="p">.</span><span class="n">layer</span> <span class="nl">insertSublayer</span><span class="p">:</span><span class="n">preview</span> <span class="nl">atIndex</span><span class="p">:</span><span class="mi">100</span><span class="p">];</span>
</span><span class='line'><span class="nb">self</span><span class="p">.</span><span class="n">previewLayer</span> <span class="o">=</span> <span class="n">preview</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>6.启动会话</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">[</span><span class="n">_session</span> <span class="n">startRunning</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[数据解析模型设置的技巧]]></title>
    <link href="http://heeween.github.io/blog/2014-08-30-shu-ju-jie-xi-mo-xing-she-zhi-de-ji-qiao/"/>
    <updated>2014-08-30T11:50:05+08:00</updated>
    <id>http://heeween.github.io/blog/shu-ju-jie-xi-mo-xing-she-zhi-de-ji-qiao</id>
    <content type="html"><![CDATA[<h2>最直接的计算cell高度的方法</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">/</span><span class="err">#</span><span class="n">pragma</span> <span class="n">mark</span> <span class="o">-</span> <span class="err">代理方法</span>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="n">CGFloat</span><span class="p">)</span><span class="nl">tableView</span><span class="p">:(</span><span class="bp">UITableView</span> <span class="o">*</span><span class="p">)</span><span class="n">tableView</span> <span class="nl">heightForRowAtIndexPath</span><span class="p">:(</span><span class="bp">NSIndexPath</span> <span class="o">*</span><span class="p">)</span><span class="n">indexPath</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 取出帖子模型</span>
</span><span class='line'>    <span class="n">HYWTopic</span> <span class="o">*</span><span class="n">topic</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">topics</span><span class="p">[</span><span class="n">indexPath</span><span class="p">.</span><span class="n">row</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 文字的最大尺寸</span>
</span><span class='line'>    <span class="bp">CGSize</span> <span class="n">maxSize</span> <span class="o">=</span> <span class="n">CGSizeMake</span><span class="p">([</span><span class="bp">UIScreen</span> <span class="n">mainScreen</span><span class="p">].</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span> <span class="o">-</span> <span class="mi">4</span> <span class="o">*</span> <span class="n">HYWTopicCellMargin</span><span class="p">,</span> <span class="n">MAXFLOAT</span><span class="p">);</span>
</span><span class='line'><span class="c1">//    CGFloat textH = [topic.text sizeWithFont:[UIFont systemFontOfSize:14] constrainedToSize:maxSize].height;</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">textH</span> <span class="o">=</span> <span class="p">[</span><span class="n">topic</span><span class="p">.</span><span class="n">text</span> <span class="nl">boundingRectWithSize</span><span class="p">:</span><span class="n">maxSize</span> <span class="nl">options</span><span class="p">:</span><span class="n">NSStringDrawingUsesLineFragmentOrigin</span> <span class="nl">attributes</span><span class="p">:</span><span class="l">@{</span><span class="nl">NSFontAttributeName</span> <span class="p">:</span> <span class="p">[</span><span class="bp">UIFont</span> <span class="nl">systemFontOfSize</span><span class="p">:</span><span class="mi">14</span><span class="p">]</span><span class="l">}</span> <span class="nl">context</span><span class="p">:</span><span class="nb">nil</span><span class="p">].</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// cell的高度</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">cellH</span> <span class="o">=</span> <span class="n">HYWTopicCellTextY</span> <span class="o">+</span> <span class="n">textH</span> <span class="o">+</span> <span class="n">HYWTopicCellBottomBarH</span> <span class="o">+</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">HYWTopicCellMargin</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">cellH</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://heeween.github.io/images/Snip20150729_1.png" alt="" /></p>

<h2>set方法和get方法都重写的话,成员变量也不会自动生成</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="n">CGFloat</span><span class="p">)</span><span class="nf">cellHeight</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">_cellHeight</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// 文字的最大尺寸</span>
</span><span class='line'>        <span class="bp">CGSize</span> <span class="n">maxSize</span> <span class="o">=</span> <span class="n">CGSizeMake</span><span class="p">([</span><span class="bp">UIScreen</span> <span class="n">mainScreen</span><span class="p">].</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span> <span class="o">-</span> <span class="mi">4</span> <span class="o">*</span> <span class="n">HYWTopicCellMargin</span><span class="p">,</span> <span class="n">MAXFLOAT</span><span class="p">);</span>
</span><span class='line'>        <span class="c1">// 计算文字的高度</span>
</span><span class='line'>        <span class="n">CGFloat</span> <span class="n">textH</span> <span class="o">=</span> <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">text</span> <span class="nl">boundingRectWithSize</span><span class="p">:</span><span class="n">maxSize</span> <span class="nl">options</span><span class="p">:</span><span class="n">NSStringDrawingUsesLineFragmentOrigin</span> <span class="nl">attributes</span><span class="p">:</span><span class="l">@{</span><span class="nl">NSFontAttributeName</span> <span class="p">:</span> <span class="p">[</span><span class="bp">UIFont</span> <span class="nl">systemFontOfSize</span><span class="p">:</span><span class="mi">14</span><span class="p">]</span><span class="l">}</span> <span class="nl">context</span><span class="p">:</span><span class="nb">nil</span><span class="p">].</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// cell的高度</span>
</span><span class='line'>        <span class="n">_cellHeight</span> <span class="o">=</span> <span class="n">HYWTopicCellTextY</span> <span class="o">+</span> <span class="n">textH</span> <span class="o">+</span> <span class="n">HYWTopicCellBottomBarH</span> <span class="o">+</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">HYWTopicCellMargin</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">_cellHeight</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://heeween.github.io/images/Snip20150729_2.png" alt="" /></p>

<h2>MJExtension模型属性名和键值名替换可以统一处理,如果有规律的话</h2>

<p><img src="http://heeween.github.io/images/Snip20150729_4.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[popMenuController注意事项]]></title>
    <link href="http://heeween.github.io/blog/2014-08-10-popmenucontrollerzhu-yi-shi-xiang/"/>
    <updated>2014-08-10T11:03:34+08:00</updated>
    <id>http://heeween.github.io/blog/popmenucontrollerzhu-yi-shi-xiang</id>
    <content type="html"><![CDATA[<h2>popMenuController</h2>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自定义控件封装的注意事项]]></title>
    <link href="http://heeween.github.io/blog/2014-08-08-zi-ding-yi-kong-jian-feng-zhuang-de-zhu-yi-shi-xiang/"/>
    <updated>2014-08-08T11:38:43+08:00</updated>
    <id>http://heeween.github.io/blog/zi-ding-yi-kong-jian-feng-zhuang-de-zhu-yi-shi-xiang</id>
    <content type="html"><![CDATA[<h2>封装控件时,一定要留意属性是否需要重写set方法,以便时时监听属性修改,添加修改之后的操作</h2>

<ul>
<li>而且还要考虑封装控件继承父类的属性也可能时时会被修改</li>
<li>注意父类的set方法,要使用super</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">/</span><span class="err">#</span><span class="n">pragma</span> <span class="n">mark</span> <span class="o">-</span> <span class="err">重写</span><span class="k">setter</span>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">setPlaceholderColor</span><span class="p">:(</span><span class="bp">UIColor</span> <span class="o">*</span><span class="p">)</span><span class="n">placeholderColor</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">_placeholderColor</span> <span class="o">=</span> <span class="n">placeholderColor</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="n">setNeedsDisplay</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">setPlaceholder</span><span class="p">:(</span><span class="bp">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">placeholder</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">_placeholder</span> <span class="o">=</span> <span class="p">[</span><span class="n">placeholder</span> <span class="k">copy</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="n">setNeedsDisplay</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">setFont</span><span class="p">:(</span><span class="bp">UIFont</span> <span class="o">*</span><span class="p">)</span><span class="n">font</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="nl">setFont</span><span class="p">:</span><span class="n">font</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="n">setNeedsDisplay</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">setText</span><span class="p">:(</span><span class="bp">NSString</span> <span class="o">*</span><span class="p">)</span><span class="n">text</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="nl">setText</span><span class="p">:</span><span class="n">text</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="n">setNeedsDisplay</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">setAttributedText</span><span class="p">:(</span><span class="bp">NSAttributedString</span> <span class="o">*</span><span class="p">)</span><span class="n">attributedText</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="nl">setAttributedText</span><span class="p">:</span><span class="n">attributedText</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="n">setNeedsDisplay</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>恰当的时候才会调用的一些系统方法</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'> <span class="o">*</span> <span class="n">setNeedsDisplay</span><span class="err">方法</span> <span class="o">:</span> <span class="err">会在恰当的时刻自动调用</span><span class="nl">drawRect</span><span class="p">:</span><span class="err">方法</span>
</span><span class='line'> <span class="o">*</span> <span class="n">setNeedsLayout</span><span class="err">方法</span> <span class="o">:</span> <span class="err">会在恰当的时刻调用</span><span class="n">layoutSubviews</span><span class="err">方法</span>
</span><span class='line'> <span class="o">*</span> <span class="nl">initWithNibName</span><span class="p">:</span> <span class="nl">bundle</span><span class="p">:</span><span class="nb">nil</span> <span class="o">:</span> <span class="err">会在恰当的时刻加载</span><span class="n">nib</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Textfield和TextView的区别]]></title>
    <link href="http://heeween.github.io/blog/2014-08-07-textfieldhe-textviewde-qu-bie/"/>
    <updated>2014-08-07T11:37:21+08:00</updated>
    <id>http://heeween.github.io/blog/textfieldhe-textviewde-qu-bie</id>
    <content type="html"><![CDATA[<h2>Textfield和TextView的区别</h2>

<ul>
<li><p>UITextField *textField默认的情况
1.只能显示一行文字
2.有占位文字</p></li>
<li><p>UITextView *textView默认的情况
2.能显示任意行文字
2.没有占位文字</p></li>
<li><p>文本输入控件,最终希望拥有的功能
1.能显示任意行文字
2.有占位文字</p></li>
<li><p>最终的方案:
1.继承自UITextView
2.在UITextView能显示任意行文字的基础上,增加"有占位文字"的功能</p></li>
</ul>


<h2>另类的一种监听textfield输入文字的方法</h2>

<ul>
<li>自定义一个textfield,重写- (void)insetText:(NSString *)text;</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// 也能在这个方法中监听键盘的输入，比如输入“换行”</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">insertText:</span><span class="p">(</span><span class="bp">NSString</span> <span class="o">*</span><span class="p">)</span><span class="nv">text</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="nl">insertText</span><span class="p">:</span><span class="n">text</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">HYWLog</span><span class="p">(</span><span class="s">@&quot;%d&quot;</span><span class="p">,</span> <span class="p">[</span><span class="n">text</span> <span class="nl">isEqualToString</span><span class="p">:</span><span class="s">@&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">]);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>代理和通知的另一个区别</h2>

<ul>
<li>textview监听自己的占位文字变化,以便及时清除占位文字,如果使用代理,自己设置为自己的代理,监听文字改变,就会有这样的坏处&mdash;-外部用到这个对象时再设置代理时,就会覆盖自己的代理属性</li>
<li>所以textView自己应该监听自己文字变化的通知,这样自己的监听不会影响外部用textview的监听</li>
<li>所以代理更适合那些获得数据的情况,点击执行特定操作的情况,这样能保证数据的唯一性</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Appearance统一设置主题的问题]]></title>
    <link href="http://heeween.github.io/blog/2014-08-06-appearancetong-%5B%3F%5D-she-zhi-zhu-ti-de-wen-ti/"/>
    <updated>2014-08-06T11:35:44+08:00</updated>
    <id>http://heeween.github.io/blog/appearancetong-[?]-she-zhi-zhu-ti-de-wen-ti</id>
    <content type="html"><![CDATA[<h2>通过APPearance修改navigationbarItem后,状态不会默认高亮,也不会马上渲染</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// 设置item</span>
</span><span class='line'>    <span class="bp">UIBarButtonItem</span> <span class="o">*</span><span class="n">item</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIBarButtonItem</span> <span class="n">appearance</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// UIControlStateNormal</span>
</span><span class='line'>    <span class="bp">NSMutableDictionary</span> <span class="o">*</span><span class="n">itemAttrs</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSMutableDictionary</span> <span class="n">dictionary</span><span class="p">];</span>
</span><span class='line'>    <span class="n">itemAttrs</span><span class="p">[</span><span class="n">NSForegroundColorAttributeName</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">blackColor</span><span class="p">];</span>
</span><span class='line'>    <span class="n">itemAttrs</span><span class="p">[</span><span class="n">NSFontAttributeName</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIFont</span> <span class="nl">systemFontOfSize</span><span class="p">:</span><span class="mi">17</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">item</span> <span class="nl">setTitleTextAttributes</span><span class="p">:</span><span class="n">itemAttrs</span> <span class="nl">forState</span><span class="p">:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>这样设置以后导航栏的按钮点击高亮消失了,所以还需要再设置disable或者hilight的状态</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'>    <span class="c1">// UIControlStateDisabled</span>
</span><span class='line'>    <span class="bp">NSMutableDictionary</span> <span class="o">*</span><span class="n">itemDisabledAttrs</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSMutableDictionary</span> <span class="n">dictionary</span><span class="p">];</span>
</span><span class='line'>    <span class="n">itemDisabledAttrs</span><span class="p">[</span><span class="n">NSForegroundColorAttributeName</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">lightGrayColor</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">item</span> <span class="nl">setTitleTextAttributes</span><span class="p">:</span><span class="n">itemDisabledAttrs</span> <span class="nl">forState</span><span class="p">:</span><span class="n">UIControlStateDisabled</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 在post控制中设置默认不能点击</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">navigationItem</span><span class="p">.</span><span class="n">rightBarButtonItem</span><span class="p">.</span><span class="n">enabled</span> <span class="o">=</span> <span class="nb">NO</span><span class="p">;</span> <span class="c1">// 默认不能点击</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>设置disable后发现,导航栏的按钮并不会显示默认的disable状态,这是因为通过appearance设置渲染延迟的问题,需要强制刷新控制</li>
</ul>


<p><img src="http://heeween.github.io/images/Snip20150805_2.png" alt="" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// 强制刷新</span>
</span><span class='line'><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">navigationController</span><span class="p">.</span><span class="n">navigationBar</span> <span class="n">layoutIfNeeded</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://heeween.github.io/images/Snip20150805_3.png" alt="" /></p>

<ul>
<li>另外,当导航栏用在NavigationController中, appearance设置才会生效</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[webView加载进度条的不开放和常见解决方案]]></title>
    <link href="http://heeween.github.io/blog/2014-08-05-webviewjia-zai-jin-du-tiao-de-bu-kai-fang-he-chang-jian-jie-jue-fang-an/"/>
    <updated>2014-08-05T11:32:37+08:00</updated>
    <id>http://heeween.github.io/blog/webviewjia-zai-jin-du-tiao-de-bu-kai-fang-he-chang-jian-jie-jue-fang-an</id>
    <content type="html"><![CDATA[<h2>webView加载进度的实现&mdash;APP所有加载进度都是假象</h2>

<p><img src="http://heeween.github.io/images/Snip20150803_10.png" alt="" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// 将第三方框架设置为webView代理</span>
</span><span class='line'><span class="nb">self</span><span class="p">.</span><span class="n">progress</span> <span class="o">=</span> <span class="p">[[</span><span class="n">NJKWebViewProgress</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'><span class="nb">self</span><span class="p">.</span><span class="n">webView</span><span class="p">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">progress</span><span class="p">;</span>
</span><span class='line'><span class="k">__weak</span> <span class="k">typeof</span><span class="p">(</span><span class="nb">self</span><span class="p">)</span> <span class="n">weakSelf</span> <span class="o">=</span> <span class="nb">self</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 通过给代理的blcok赋值,拿到progress进度进行赋值</span>
</span><span class='line'><span class="nb">self</span><span class="p">.</span><span class="n">progress</span><span class="p">.</span><span class="n">progressBlock</span> <span class="o">=</span> <span class="o">^</span><span class="p">(</span><span class="kt">float</span> <span class="n">progress</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="n">weakSelf</span><span class="p">.</span><span class="n">progressView</span><span class="p">.</span><span class="n">progress</span> <span class="o">=</span> <span class="n">progress</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">weakSelf</span><span class="p">.</span><span class="n">progressView</span><span class="p">.</span><span class="n">hidden</span> <span class="o">=</span> <span class="p">(</span><span class="n">progress</span> <span class="o">==</span> <span class="mf">1.0</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 再设置第三方框架的代理为控制器,以便控制器还可以正常监听webview的代理方法</span>
</span><span class='line'><span class="nb">self</span><span class="p">.</span><span class="n">progress</span><span class="p">.</span><span class="n">webViewProxyDelegate</span> <span class="o">=</span> <span class="nb">self</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// webview加载网络请求</span>
</span><span class='line'><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">webView</span> <span class="nl">loadRequest</span><span class="p">:[</span><span class="bp">NSURLRequest</span> <span class="nl">requestWithURL</span><span class="p">:[</span><span class="bp">NSURL</span> <span class="nl">URLWithString</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">url</span><span class="p">]]];</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Button通过网络加载图片不能使用SDWebimage的&lt;UIImageView+WebCache.h>方法,否则图片不显示</h2>

<p><img src="http://heeween.github.io/images/Snip20150803_13.png" alt="" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// 使用UIButton的分类方法,附近状态参数</span>
</span><span class='line'><span class="p">[</span><span class="nb">self</span> <span class="nl">sd_setImageWithURL</span><span class="p">:[</span><span class="bp">NSURL</span> <span class="nl">URLWithString</span><span class="p">:</span><span class="n">square</span><span class="p">.</span><span class="n">icon</span><span class="p">]</span> <span class="nl">forState</span><span class="p">:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://heeween.github.io/images/Snip20150803_11.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Modal出来的控制器再modal一个控制器的问题]]></title>
    <link href="http://heeween.github.io/blog/2014-08-05-bai-si-bu-de-jie-zong-jie-8yue-5ri/"/>
    <updated>2014-08-05T09:23:46+08:00</updated>
    <id>http://heeween.github.io/blog/bai-si-bu-de-jie-zong-jie-8yue-5ri</id>
    <content type="html"><![CDATA[<h2>modal出来的控制器再modal一个控制器的问题</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// 如果是先弹出再消失当前控制器</span>
</span><span class='line'>
</span><span class='line'>                <span class="o">!</span><span class="n">completionBlock</span> <span class="o">?</span> <span class="o">:</span> <span class="n">completionBlock</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>                <span class="p">[</span><span class="nb">self</span> <span class="nl">dismissViewControllerAnimated</span><span class="p">:</span><span class="nb">NO</span> <span class="nl">completion</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="mi">2014</span><span class="o">-</span><span class="mi">08</span><span class="o">-</span><span class="mo">05</span> <span class="mi">09</span><span class="o">:</span><span class="mi">22</span><span class="o">:</span><span class="mf">54.949</span> <span class="mo">01</span><span class="o">-</span><span class="err">百思不得姐</span><span class="p">[</span><span class="mi">11162</span><span class="o">:</span><span class="mi">25568</span><span class="p">]</span> <span class="nl">Warning</span><span class="p">:</span> <span class="n">Attempt</span> <span class="n">to</span> <span class="n">present</span> <span class="o">&lt;</span><span class="nl">HYWPostWordViewController</span><span class="p">:</span> <span class="mh">0x7fba697714c0</span><span class="o">&gt;</span> <span class="n">on</span> <span class="o">&lt;</span><span class="nl">HYWTabBarController</span><span class="p">:</span> <span class="mh">0x7fba6944bce0</span><span class="o">&gt;</span> <span class="n">whose</span> <span class="n">view</span> <span class="n">is</span> <span class="n">not</span> <span class="k">in</span> <span class="n">the</span> <span class="n">window</span> <span class="n">hierarchy</span><span class="o">!</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// 如果是先消失再弹出当前控制器</span>
</span><span class='line'>
</span><span class='line'>                <span class="o">!</span><span class="n">completionBlock</span> <span class="o">?</span> <span class="o">:</span> <span class="n">completionBlock</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>                <span class="p">[</span><span class="nb">self</span> <span class="nl">dismissViewControllerAnimated</span><span class="p">:</span><span class="nb">NO</span> <span class="nl">completion</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://heeween.github.io/images/Snip20150805_1.png" alt="" /></p>

<ul>
<li>原因是互相引用,两个控制器都不会死
//                self.presentationController  // self - > postWordVc
//                postWord.presentingViewController   // postWord - > self</li>
</ul>


<h2>控制器View的宽度问题</h2>

<ul>
<li>如果控制器从xib或者storyboard中创建处理的,默认宽高是600*600;</li>
<li>如果控制器是代码创建的,view的宽高是屏幕宽高</li>
<li>如果再viewdidload里设置为屏幕宽度,显示出来可能会变得大概为100多的宽度,这又是为什么</li>
<li>因为view里的子控件默认是autoresizing的,一开始控制器view宽度是600,子控件设置为375,那么当显示出来后,子控件也会按照比例缩小</li>
<li>所以要设置为autoresizingnone属性</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[layer.cornerRadius性能问题及解决方案]]></title>
    <link href="http://heeween.github.io/blog/2014-08-04-layer-dot-cornerradiusxing-neng-wen-ti-ji-jie-jue-fang-an/"/>
    <updated>2014-08-04T11:30:42+08:00</updated>
    <id>http://heeween.github.io/blog/layer-dot-cornerradiusxing-neng-wen-ti-ji-jie-jue-fang-an</id>
    <content type="html"><![CDATA[<h2>圆角设置的性能问题layer.cornerRadius方法会造成程序卡顿,利用Quartz2D性能更好</h2>

<p><img src="http://heeween.github.io/images/Snip20150803_9.png" alt="" />
* C语言绘图方式</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="bp">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nf">circleImage</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// NO代表透明</span>
</span><span class='line'>    <span class="n">UIGraphicsBeginImageContextWithOptions</span><span class="p">(</span><span class="nb">self</span><span class="p">.</span><span class="n">size</span><span class="p">,</span> <span class="nb">NO</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 获得上下文</span>
</span><span class='line'>    <span class="n">CGContextRef</span> <span class="n">ctx</span> <span class="o">=</span> <span class="n">UIGraphicsGetCurrentContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 添加一个圆</span>
</span><span class='line'>    <span class="bp">CGRect</span> <span class="n">rect</span> <span class="o">=</span> <span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="nb">self</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">,</span> <span class="nb">self</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">);</span>
</span><span class='line'>    <span class="n">CGContextAddEllipseInRect</span><span class="p">(</span><span class="n">ctx</span><span class="p">,</span> <span class="n">rect</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 裁剪</span>
</span><span class='line'>    <span class="n">CGContextClip</span><span class="p">(</span><span class="n">ctx</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 将图片画上去</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="nl">drawInRect</span><span class="p">:</span><span class="n">rect</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="bp">UIImage</span> <span class="o">*</span><span class="n">image</span> <span class="o">=</span> <span class="n">UIGraphicsGetImageFromCurrentImageContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">UIGraphicsEndImageContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">image</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>UIBezierPath绘图方式</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="bp">UIImage</span> <span class="o">*</span><span class="p">)</span><span class="nf">clipImage</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 1.开启位图上下文，跟图片尺寸一样大</span>
</span><span class='line'>
</span><span class='line'>    <span class="bp">CGSize</span> <span class="n">imageSize</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">size</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">UIGraphicsBeginImageContextWithOptions</span><span class="p">(</span><span class="n">imageSize</span><span class="p">,</span> <span class="nb">NO</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 2.设置圆形裁剪区域，正切与图片</span>
</span><span class='line'>    <span class="bp">UIBezierPath</span> <span class="o">*</span><span class="n">path</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIBezierPath</span> <span class="nl">bezierPathWithOvalInRect</span><span class="p">:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">imageSize</span><span class="p">.</span><span class="n">width</span><span class="p">,</span> <span class="n">imageSize</span><span class="p">.</span><span class="n">height</span><span class="p">)];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 2.2把路径设置为裁剪区域</span>
</span><span class='line'>    <span class="p">[</span><span class="n">path</span> <span class="n">addClip</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 3.绘制图片</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="nl">drawAtPoint</span><span class="p">:</span><span class="n">CGPointZero</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 4.从上下文中获取图片</span>
</span><span class='line'>    <span class="bp">UIImage</span> <span class="o">*</span><span class="n">clipImage</span> <span class="o">=</span> <span class="n">UIGraphicsGetImageFromCurrentImageContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 5.关闭上下文</span>
</span><span class='line'>    <span class="n">UIGraphicsEndImageContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="n">clipImage</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[让一个普通控件弹出menuController的步骤]]></title>
    <link href="http://heeween.github.io/blog/2014-08-03-bai-si-bu-de-jie-xiang-mu-geng-duo-zong-jie/"/>
    <updated>2014-08-03T21:50:10+08:00</updated>
    <id>http://heeween.github.io/blog/bai-si-bu-de-jie-xiang-mu-geng-duo-zong-jie</id>
    <content type="html"><![CDATA[<h2>状态栏修改的两种方式</h2>

<ul>
<li>iOS7之后默认infolist里View controller-based status bar appearance值为YES,默认的状态栏也为黑色,意思就是状态栏修改都交给每个控制器,每个控制器实现</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 让当前控制器对应的状态栏是白色</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="n">UIStatusBarStyle</span><span class="p">)</span><span class="nf">preferredStatusBarStyle</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">UIStatusBarStyleLightContent</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://heeween.github.io/images/Snip20150803_1.png" alt="" /></p>

<ul>
<li>但是项目中登陆控制器需要显示之后,才修改为白色,所以就可以将infoplist中默认修改权改为NO,修改权还交给UIApplication,可以在控制器view显示后和销毁后修改两次</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">IBAction</span><span class="p">)</span><span class="nf">back</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="bp">UIApplication</span> <span class="n">sharedApplication</span><span class="p">].</span><span class="n">statusBarStyle</span> <span class="o">=</span> <span class="n">UIStatusBarStyleDefault</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="nl">dismissViewControllerAnimated</span><span class="p">:</span><span class="nb">YES</span> <span class="nl">completion</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">viewDidAppear:</span><span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nv">animated</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">super</span> <span class="nl">viewDidAppear</span><span class="p">:</span><span class="n">animated</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">[</span><span class="bp">UIApplication</span> <span class="n">sharedApplication</span><span class="p">].</span><span class="n">statusBarStyle</span> <span class="o">=</span> <span class="n">UIStatusBarStyleLightContent</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://heeween.github.io/images/Snip20150803_2.png" alt="" /></p>

<h2>让一个普通控件弹出menuController的步骤</h2>

<ul>
<li>给控件添加Tap手势</li>
<li>让label有资格成为第一响应者,</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">canBecomeFirstResponder</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">YES</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://heeween.github.io/images/Snip20150803_3.png" alt="" /></p>

<ul>
<li>label能执行哪些操作(比如copy, paste等等)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nf">canPerformAction:</span><span class="p">(</span><span class="kt">SEL</span><span class="p">)</span><span class="nv">action</span> <span class="nf">withSender:</span><span class="p">(</span><span class="kt">id</span><span class="p">)</span><span class="nv">sender</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">action</span> <span class="o">==</span> <span class="k">@selector</span><span class="p">(</span><span class="nl">cut</span><span class="p">:)</span> <span class="o">||</span> <span class="n">action</span> <span class="o">==</span> <span class="k">@selector</span><span class="p">(</span><span class="k">copy</span><span class="o">:</span><span class="p">)</span> <span class="o">||</span> <span class="n">action</span> <span class="o">==</span> <span class="k">@selector</span><span class="p">(</span><span class="nl">paste</span><span class="p">:))</span> <span class="k">return</span> <span class="nb">YES</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nb">NO</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://heeween.github.io/images/Snip20150803_4.png" alt="" /></p>

<ul>
<li>实现各种操作方法,要在label所在的控制器重实现</li>
</ul>


<p><img src="http://heeween.github.io/images/Snip20150803_5.png" alt="" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">cut:</span><span class="p">(</span><span class="bp">UIMenuController</span> <span class="o">*</span><span class="p">)</span><span class="nv">menu</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 将自己的文字复制到粘贴板</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span> <span class="k">copy</span><span class="o">:</span><span class="n">menu</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 清空文字</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="nb">nil</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">copy:</span><span class="p">(</span><span class="bp">UIMenuController</span> <span class="o">*</span><span class="p">)</span><span class="nv">menu</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 将自己的文字复制到粘贴板</span>
</span><span class='line'>    <span class="bp">UIPasteboard</span> <span class="o">*</span><span class="n">board</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIPasteboard</span> <span class="n">generalPasteboard</span><span class="p">];</span>
</span><span class='line'>    <span class="n">board</span><span class="p">.</span><span class="n">string</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">text</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">paste:</span><span class="p">(</span><span class="bp">UIMenuController</span> <span class="o">*</span><span class="p">)</span><span class="nv">menu</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="c1">// 将粘贴板的文字 复制 到自己身上</span>
</span><span class='line'>    <span class="bp">UIPasteboard</span> <span class="o">*</span><span class="n">board</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIPasteboard</span> <span class="n">generalPasteboard</span><span class="p">];</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">board</span><span class="p">.</span><span class="n">string</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://heeween.github.io/images/Snip20150803_7.png" alt="" /></p>

<ul>
<li>让label成为第一响应者</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// 这里的self是label</span>
</span><span class='line'><span class="p">[</span><span class="nb">self</span> <span class="n">becomeFirstResponder</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>显示UIMenuController,指定弹出的矩形框</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="bp">UIMenuController</span> <span class="o">*</span><span class="n">menu</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIMenuController</span> <span class="n">sharedMenuController</span><span class="p">];</span>
</span><span class='line'><span class="c1">// targetRect: MenuController需要指向的矩形框</span>
</span><span class='line'><span class="c1">// targetView: targetRect会以targetView的左上角为坐标原点</span>
</span><span class='line'><span class="p">[</span><span class="n">menu</span> <span class="nl">setTargetRect</span><span class="p">:</span><span class="nb">self</span><span class="p">.</span><span class="n">bounds</span> <span class="nl">inView</span><span class="p">:</span><span class="nb">self</span><span class="p">];</span>
</span><span class='line'><span class="c1">// [menu setTargetRect:self.frame inView:self.superview];</span>
</span><span class='line'><span class="p">[</span><span class="n">menu</span> <span class="nl">setMenuVisible</span><span class="p">:</span><span class="nb">YES</span> <span class="nl">animated</span><span class="p">:</span><span class="nb">YES</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://heeween.github.io/images/Snip20150803_6.png" alt="" /></p>

<ul>
<li>自定义menuController弹出的文字,添加item</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// 添加MenuItem(点击item, 默认会调用控制器的方法)</span>
</span><span class='line'><span class="bp">UIMenuItem</span> <span class="o">*</span><span class="n">ding</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIMenuItem</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithTitle</span><span class="p">:</span><span class="s">@&quot;顶&quot;</span> <span class="nl">action</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">ding</span><span class="p">:)];</span>
</span><span class='line'><span class="bp">UIMenuItem</span> <span class="o">*</span><span class="n">replay</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIMenuItem</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithTitle</span><span class="p">:</span><span class="s">@&quot;回复&quot;</span> <span class="nl">action</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">replay</span><span class="p">:)];</span>
</span><span class='line'><span class="bp">UIMenuItem</span> <span class="o">*</span><span class="n">report</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIMenuItem</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithTitle</span><span class="p">:</span><span class="s">@&quot;举报&quot;</span> <span class="nl">action</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="nl">report</span><span class="p">:)];</span>
</span><span class='line'><span class="n">menu</span><span class="p">.</span><span class="n">menuItems</span> <span class="o">=</span> <span class="l">@[</span><span class="n">ding</span><span class="p">,</span> <span class="n">replay</span><span class="p">,</span> <span class="n">report</span><span class="l">]</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>group样式TableView的Frame默认给Y值增加35</h2>

<p><img src="http://heeween.github.io/images/Snip20150803_8.png" alt="" /></p>

<ul>
<li>改回来的话,就在viewDidLoad方法中,修改TableView的contentInset</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// 调整inset</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">tableView</span><span class="p">.</span><span class="n">contentInset</span> <span class="o">=</span> <span class="n">UIEdgeInsetsMake</span><span class="p">(</span><span class="n">HYWTopicCellMargin</span> <span class="o">-</span> <span class="mi">35</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[多组表格网络请求加载失败可能引发的小问题]]></title>
    <link href="http://heeween.github.io/blog/2014-08-02-bai-si-bu-de-jie-xiang-mu-zong-jie/"/>
    <updated>2014-08-02T15:42:54+08:00</updated>
    <id>http://heeween.github.io/blog/bai-si-bu-de-jie-xiang-mu-zong-jie</id>
    <content type="html"><![CDATA[<h2>KVC的keypath下划线写不写都能找到</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// 恢复帖子的top_cmt</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nb">self</span><span class="p">.</span><span class="n">saved_top_cmt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">topic</span><span class="p">.</span><span class="n">top_cmt</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">saved_top_cmt</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">topic</span> <span class="nl">setValue</span><span class="p">:</span><span class="mi">@0</span> <span class="nl">forKeyPath</span><span class="p">:</span><span class="s">@&quot;_cellHeight&quot;</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://heeween.github.io/images/Snip20150802_1.png" alt="" /></p>

<h2>MJExtension的无限映射,注意不要打全局断点,否则会卡住</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">+</span> <span class="p">(</span><span class="bp">NSDictionary</span> <span class="o">*</span><span class="p">)</span><span class="nf">replacedKeyFromPropertyName</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="l">@{</span>
</span><span class='line'>             <span class="s">@&quot;small_image&quot;</span> <span class="o">:</span> <span class="s">@&quot;image0&quot;</span><span class="p">,</span>
</span><span class='line'>             <span class="s">@&quot;large_image&quot;</span> <span class="o">:</span> <span class="s">@&quot;image1&quot;</span><span class="p">,</span>
</span><span class='line'>             <span class="s">@&quot;middle_image&quot;</span> <span class="o">:</span> <span class="s">@&quot;image2&quot;</span><span class="p">,</span>
</span><span class='line'>             <span class="s">@&quot;ID&quot;</span> <span class="o">:</span> <span class="s">@&quot;id&quot;</span><span class="p">,</span>
</span><span class='line'>             <span class="s">@&quot;top_cmt&quot;</span> <span class="o">:</span> <span class="s">@&quot;top_cmt[0]&quot;</span> <span class="c1">//,</span>
</span><span class='line'><span class="c1">//             @&quot;qzone_uid&quot; : @&quot;top_cmt[0].user.qzone_uid&quot;</span>
</span><span class='line'>             <span class="l">}</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://heeween.github.io/images/Snip20150802_4.png" alt="" /></p>

<h2>字符串是否为nil的判断</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">if</span> <span class="p">(</span><span class="n">comment</span><span class="p">.</span><span class="n">voiceuri</span><span class="p">.</span><span class="n">length</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">voiceButton</span><span class="p">.</span><span class="n">hidden</span> <span class="o">=</span> <span class="nb">NO</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">voiceButton</span> <span class="nl">setTitle</span><span class="p">:[</span><span class="bp">NSString</span> <span class="nl">stringWithFormat</span><span class="p">:</span><span class="s">@&quot;%zd&#39;&#39;&quot;</span><span class="p">,</span> <span class="n">comment</span><span class="p">.</span><span class="n">voicetime</span><span class="p">]</span> <span class="nl">forState</span><span class="p">:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">voiceButton</span><span class="p">.</span><span class="n">hidden</span> <span class="o">=</span> <span class="nb">YES</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://heeween.github.io/images/Snip20150802_5.png" alt="" /></p>

<h2>实现cell的分割线的小技巧</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">awakeFromNib</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="bp">UIImageView</span> <span class="o">*</span><span class="n">bgView</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIImageView</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="n">bgView</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;mainCellBackground&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">backgroundView</span> <span class="o">=</span> <span class="n">bgView</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://heeween.github.io/images/Snip20150802_7.png" alt="" /></p>

<h2>网络请求刷新更多数据,加载失败可能引发的小问题</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// 结束之前的所有请求</span>
</span><span class='line'><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">manager</span><span class="p">.</span><span class="n">tasks</span> <span class="nl">makeObjectsPerformSelector</span><span class="p">:</span><span class="k">@selector</span><span class="p">(</span><span class="n">cancel</span><span class="p">)];</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 页码</span>
</span><span class='line'><span class="bp">NSInteger</span> <span class="n">page</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">page</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// 参数</span>
</span><span class='line'><span class="bp">NSMutableDictionary</span> <span class="o">*</span><span class="n">params</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSMutableDictionary</span> <span class="n">dictionary</span><span class="p">];</span>
</span><span class='line'><span class="n">params</span><span class="p">[</span><span class="s">@&quot;a&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="s">@&quot;dataList&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">params</span><span class="p">[</span><span class="s">@&quot;c&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="s">@&quot;comment&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">params</span><span class="p">[</span><span class="s">@&quot;data_id&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">topic</span><span class="p">.</span><span class="n">ID</span><span class="p">;</span>
</span><span class='line'><span class="n">params</span><span class="p">[</span><span class="s">@&quot;page&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="l">@(</span><span class="n">page</span><span class="l">)</span><span class="p">;</span>
</span><span class='line'><span class="n">HYWComment</span> <span class="o">*</span><span class="n">cmt</span> <span class="o">=</span> <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">latestComments</span> <span class="n">lastObject</span><span class="p">];</span>
</span><span class='line'><span class="n">params</span><span class="p">[</span><span class="s">@&quot;lastcid&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="n">cmt</span><span class="p">.</span><span class="n">ID</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">manager</span> <span class="nl">GET</span><span class="p">:</span><span class="s">@&quot;http://api.budejie.com/api/api_open.php&quot;</span> <span class="nl">parameters</span><span class="p">:</span><span class="n">params</span> <span class="nl">success</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="bp">NSURLSessionDataTask</span> <span class="o">*</span><span class="n">task</span><span class="p">,</span> <span class="kt">id</span> <span class="n">responseObject</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// 最新评论</span>
</span><span class='line'>    <span class="bp">NSArray</span> <span class="o">*</span><span class="n">newComments</span> <span class="o">=</span> <span class="p">[</span><span class="n">HYWComment</span> <span class="nl">objectArrayWithKeyValuesArray</span><span class="p">:</span><span class="n">responseObject</span><span class="p">[</span><span class="s">@&quot;data&quot;</span><span class="p">]];</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">latestComments</span> <span class="nl">addObjectsFromArray</span><span class="p">:</span><span class="n">newComments</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 页码</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">page</span> <span class="o">=</span> <span class="n">page</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 刷新数据</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">tableView</span> <span class="n">reloadData</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 控制footer的状态</span>
</span><span class='line'>    <span class="bp">NSInteger</span> <span class="n">total</span> <span class="o">=</span> <span class="p">[</span><span class="n">responseObject</span><span class="p">[</span><span class="s">@&quot;total&quot;</span><span class="p">]</span> <span class="n">integerValue</span><span class="p">];</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">self</span><span class="p">.</span><span class="n">latestComments</span><span class="p">.</span><span class="n">count</span> <span class="o">&gt;=</span> <span class="n">total</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// 全部加载完毕</span>
</span><span class='line'>        <span class="nb">self</span><span class="p">.</span><span class="n">tableView</span><span class="p">.</span><span class="n">footer</span><span class="p">.</span><span class="n">hidden</span> <span class="o">=</span> <span class="nb">YES</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// 结束刷新状态</span>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">tableView</span><span class="p">.</span><span class="n">footer</span> <span class="n">endRefreshing</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span> <span class="nl">failure</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="bp">NSURLSessionDataTask</span> <span class="o">*</span><span class="n">task</span><span class="p">,</span> <span class="bp">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">tableView</span><span class="p">.</span><span class="n">footer</span> <span class="n">endRefreshing</span><span class="p">];</span>
</span><span class='line'><span class="p">}];</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://heeween.github.io/images/Snip20150802_9.png" alt="" /></p>

<h2>递归找到所有window的scrollView</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">+</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">searchScrollViewInView:</span><span class="p">(</span><span class="bp">UIView</span> <span class="o">*</span><span class="p">)</span><span class="nv">superview</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="bp">UIScrollView</span> <span class="o">*</span><span class="n">subview</span> <span class="k">in</span> <span class="n">superview</span><span class="p">.</span><span class="n">subviews</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 如果是scrollview, 滚动最顶部</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">([</span><span class="n">subview</span> <span class="nl">isKindOfClass</span><span class="p">:[</span><span class="bp">UIScrollView</span> <span class="k">class</span><span class="p">]])</span> <span class="p">{</span>
</span><span class='line'>            <span class="bp">CGPoint</span> <span class="n">offset</span> <span class="o">=</span> <span class="n">subview</span><span class="p">.</span><span class="n">contentOffset</span><span class="p">;</span>
</span><span class='line'>            <span class="n">offset</span><span class="p">.</span><span class="n">y</span> <span class="o">=</span> <span class="o">-</span> <span class="n">subview</span><span class="p">.</span><span class="n">contentInset</span><span class="p">.</span><span class="n">top</span><span class="p">;</span>
</span><span class='line'>            <span class="p">[</span><span class="n">subview</span> <span class="nl">setContentOffset</span><span class="p">:</span><span class="n">offset</span> <span class="nl">animated</span><span class="p">:</span><span class="nb">YES</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// 继续查找子控件</span>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span> <span class="nl">searchScrollViewInView</span><span class="p">:</span><span class="n">subview</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://heeween.github.io/images/Snip20150802_10.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Facebook第三方框架pop动画]]></title>
    <link href="http://heeween.github.io/blog/2014-07-30-bai-si-bu-de-jie-xiang-mu-zong-jie/"/>
    <updated>2014-07-30T09:14:35+08:00</updated>
    <id>http://heeween.github.io/blog/bai-si-bu-de-jie-xiang-mu-zong-jie</id>
    <content type="html"><![CDATA[<h2>基于CADisplayLisk的Facebook第三方框架pop动画</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> pop和Core Animation的区别</span>
</span><span class='line'><span class="cm"> 1.Core Animation的动画只能添加到layer上</span>
</span><span class='line'><span class="cm"> 2.pop的动画能添加到任何对象</span>
</span><span class='line'><span class="cm"> 3.pop的底层并非基于Core Animation, 是基于CADisplayLink</span>
</span><span class='line'><span class="cm"> 4.Cora Animationd的动画仅仅是表象,并不会真正修改对象的frame和size等值</span>
</span><span class='line'><span class="cm"> 5.pop的动画实时修改对象的属性,真正的修改了对象的属性</span>
</span><span class='line'><span class="cm"> */</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>基于pop做的各种绚丽动画,的示例程序&mdash;poping(太帅了) \ learnCube</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'>    <span class="n">POPSpringAnimation</span> <span class="o">*</span><span class="n">anim</span> <span class="o">=</span> <span class="p">[</span><span class="n">POPSpringAnimation</span> <span class="nl">animationWithPropertyNamed</span><span class="p">:</span><span class="n">kPOPViewCenter</span><span class="p">];</span>
</span><span class='line'>    <span class="c1">// 要添加动画的对象</span>
</span><span class='line'><span class="bp">NSString</span> <span class="o">*</span> <span class="k">const</span> <span class="n">kPOPViewAlpha</span> <span class="o">=</span> <span class="s">@&quot;view.alpha&quot;</span><span class="p">;</span>
</span><span class='line'><span class="bp">NSString</span> <span class="o">*</span> <span class="k">const</span> <span class="n">kPOPViewBackgroundColor</span> <span class="o">=</span> <span class="s">@&quot;view.backgroundColor&quot;</span><span class="p">;</span>
</span><span class='line'><span class="bp">NSString</span> <span class="o">*</span> <span class="k">const</span> <span class="n">kPOPViewBounds</span> <span class="o">=</span> <span class="n">kPOPLayerBounds</span><span class="p">;</span>
</span><span class='line'><span class="bp">NSString</span> <span class="o">*</span> <span class="k">const</span> <span class="n">kPOPViewCenter</span> <span class="o">=</span> <span class="s">@&quot;view.center&quot;</span><span class="p">;</span>
</span><span class='line'><span class="bp">NSString</span> <span class="o">*</span> <span class="k">const</span> <span class="n">kPOPViewFrame</span> <span class="o">=</span> <span class="s">@&quot;view.frame&quot;</span><span class="p">;</span>
</span><span class='line'><span class="bp">NSString</span> <span class="o">*</span> <span class="k">const</span> <span class="n">kPOPViewScaleX</span> <span class="o">=</span> <span class="s">@&quot;view.scaleX&quot;</span><span class="p">;</span>
</span><span class='line'><span class="bp">NSString</span> <span class="o">*</span> <span class="k">const</span> <span class="n">kPOPViewScaleXY</span> <span class="o">=</span> <span class="s">@&quot;view.scaleXY&quot;</span><span class="p">;</span>
</span><span class='line'><span class="bp">NSString</span> <span class="o">*</span> <span class="k">const</span> <span class="n">kPOPViewScaleY</span> <span class="o">=</span> <span class="s">@&quot;view.scaleY&quot;</span><span class="p">;</span>
</span><span class='line'><span class="bp">NSString</span> <span class="o">*</span> <span class="k">const</span> <span class="n">kPOPViewSize</span> <span class="o">=</span> <span class="n">kPOPLayerSize</span><span class="p">;</span>
</span><span class='line'><span class="bp">NSString</span> <span class="o">*</span> <span class="k">const</span> <span class="n">kPOPViewTintColor</span> <span class="o">=</span> <span class="s">@&quot;view.tintColor&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">// 动画从哪到哪,速度等属性</span>
</span><span class='line'>  <span class="n">anim</span><span class="p">.</span><span class="n">springBounciness</span> <span class="o">=</span> <span class="mi">20</span><span class="p">;</span> <span class="c1">// 弹性</span>
</span><span class='line'>    <span class="n">anim</span><span class="p">.</span><span class="n">springSpeed</span> <span class="o">=</span> <span class="mi">20</span><span class="p">;</span> <span class="c1">// 速度</span>
</span><span class='line'>    <span class="n">anim</span><span class="p">.</span><span class="n">fromValue</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span> <span class="mi">100</span><span class="p">)];</span> <span class="c1">// 从哪出发</span>
</span><span class='line'>    <span class="n">anim</span><span class="p">.</span><span class="n">toValue</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSValue</span> <span class="nl">valueWithCGPoint</span><span class="p">:</span><span class="n">CGPointMake</span><span class="p">(</span><span class="mi">200</span><span class="p">,</span> <span class="mi">200</span><span class="p">)];</span> <span class="c1">// 到哪结束</span>
</span><span class='line'>    <span class="n">anim</span><span class="p">.</span><span class="n">beginTime</span> <span class="o">=</span> <span class="n">CACurrentMediaTime</span><span class="p">()</span> <span class="o">+</span> <span class="mf">0.5</span><span class="p">;</span> <span class="c1">// 什么时候开始</span>
</span></code></pre></td></tr></table></div></figure>


<h2>tabBar弹出一个控制器的方法</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">publishClick</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 缺点:modal会让下面的控制器view移出窗口,但有时候下面view需要半透明化,并不想直接移出</span>
</span><span class='line'>    <span class="n">HYWPublishViewController</span> <span class="o">*</span><span class="n">publish</span> <span class="o">=</span> <span class="p">[[</span><span class="n">HYWPublishViewController</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[[</span><span class="bp">UIApplication</span> <span class="n">sharedApplication</span><span class="p">].</span><span class="n">keyWindow</span><span class="p">.</span><span class="n">rootViewController</span> <span class="nl">presentViewController</span><span class="p">:</span><span class="n">publish</span> <span class="nl">animated</span><span class="p">:</span><span class="nb">NO</span> <span class="nl">completion</span><span class="p">:</span><span class="nb">nil</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 缺点:当前根控制器是tabBarcontroller,添加子控制器会影响tabBar的排布</span>
</span><span class='line'>    <span class="bp">UIViewController</span> <span class="o">*</span><span class="n">root</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIApplication</span> <span class="n">sharedApplication</span><span class="p">].</span><span class="n">keyWindow</span><span class="p">.</span><span class="n">rootViewController</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="n">root</span><span class="p">.</span><span class="n">view</span> <span class="nl">addSubview</span><span class="p">:</span><span class="n">publish</span><span class="p">.</span><span class="n">view</span><span class="p">];</span>
</span><span class='line'>    <span class="p">[</span><span class="n">root</span> <span class="nl">addChildViewController</span><span class="p">:</span><span class="n">publish</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 解决方法,换成普通view添加到主窗口,但是点击事件会传到下面的view</span>
</span><span class='line'>    <span class="n">HYWPublishView</span> <span class="o">*</span><span class="n">publish</span> <span class="o">=</span> <span class="p">[</span><span class="n">HYWPublishView</span> <span class="n">publishView</span><span class="p">];</span>
</span><span class='line'>    <span class="bp">UIWindow</span> <span class="o">*</span><span class="n">window</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIApplication</span> <span class="n">sharedApplication</span><span class="p">].</span><span class="n">keyWindow</span><span class="p">;</span>
</span><span class='line'>    <span class="n">publish</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">window</span><span class="p">.</span><span class="n">bounds</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="n">window</span> <span class="nl">addSubview</span><span class="p">:</span><span class="n">publish</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 更牛逼的做法,直接自定义window,完全独立一个window,响应事件也独立,任然还可以看到下面view</span>
</span><span class='line'>    <span class="n">window</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIWindow</span> <span class="n">alloc</span><span class="p">]</span> <span class="n">init</span><span class="p">];</span>
</span><span class='line'>    <span class="n">window</span><span class="p">.</span><span class="n">frame</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIScreen</span> <span class="n">mainScreen</span><span class="p">].</span><span class="n">bounds</span><span class="p">;</span>
</span><span class='line'>    <span class="n">window</span><span class="p">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="p">[[</span><span class="bp">UIColor</span> <span class="n">yellowColor</span><span class="p">]</span> <span class="nl">colorWithAlphaComponent</span><span class="p">:</span><span class="mf">0.5</span><span class="p">];</span>
</span><span class='line'>    <span class="n">window</span><span class="p">.</span><span class="n">hidden</span> <span class="o">=</span> <span class="nb">NO</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://heeween.github.io/images/Snip20150730_1.png" alt="" />
<img src="http://heeween.github.io/images/Snip20150730_3.png" alt="" /></p>

<h2>iOS命名规范</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="k">static</span> <span class="bp">UIWindow</span> <span class="o">*</span><span class="n">window_</span><span class="p">;</span> <span class="c1">// 全局变量</span>
</span><span class='line'><span class="bp">UIWindow</span> <span class="o">*</span><span class="n">_window</span><span class="p">;</span> <span class="c1">// 成员变量</span>
</span><span class='line'><span class="k">static</span> <span class="n">NSStrin</span> <span class="o">*</span> <span class="k">const</span> <span class="n">HYWKeyVersion</span> <span class="o">=</span> <span class="s">@&quot;213984723784&quot;</span><span class="p">;</span> <span class="c1">// 普通变量</span>
</span></code></pre></td></tr></table></div></figure>


<h2>手动计算文字高度方法</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// 文字的最大尺寸</span>
</span><span class='line'>    <span class="bp">CGSize</span> <span class="n">maxSize</span> <span class="o">=</span> <span class="n">CGSizeMake</span><span class="p">([</span><span class="bp">UIScreen</span> <span class="n">mainScreen</span><span class="p">].</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span> <span class="o">-</span> <span class="mi">4</span> <span class="o">*</span> <span class="n">HYWTopicCellMargin</span><span class="p">,</span> <span class="n">MAXFLOAT</span><span class="p">);</span>
</span><span class='line'>  <span class="c1">// 根据最大尺寸和字体,计算出size,取出高度,这个方法从7.0之后就被苹果废弃了NS_DEPRECATED_IOS(2_0, 7_0, </span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">textH</span> <span class="o">=</span> <span class="p">[</span><span class="n">topic</span><span class="p">.</span><span class="n">text</span> <span class="nl">sizeWithFont</span><span class="p">:[</span><span class="bp">UIFont</span> <span class="nl">systemFontOfSize</span><span class="p">:</span><span class="mi">14</span><span class="p">]</span> <span class="nl">constrainedToSize</span><span class="p">:</span><span class="n">maxSize</span><span class="p">].</span><span class="n">height</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 苹果推荐的算法, NSStringDrawingUsesLineFragmentOrigin属性</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">textH</span> <span class="o">=</span> <span class="p">[</span><span class="n">topic</span><span class="p">.</span><span class="n">text</span> <span class="nl">boundingRectWithSize</span><span class="p">:</span><span class="n">maxSize</span> <span class="nl">options</span><span class="p">:</span><span class="n">NSStringDrawingUsesLineFragmentOrigin</span> <span class="nl">attributes</span><span class="p">:</span><span class="l">@{</span><span class="nl">NSFontAttributeName</span> <span class="p">:</span> <span class="p">[</span><span class="bp">UIFont</span> <span class="nl">systemFontOfSize</span><span class="p">:</span><span class="mi">14</span><span class="p">]</span><span class="l">}</span> <span class="nl">context</span><span class="p">:</span><span class="nb">nil</span><span class="p">].</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quartz实现image缩放的技巧]]></title>
    <link href="http://heeween.github.io/blog/2014-07-29-bai-si-bu-de-jie-xiang-mu-zong-jie/"/>
    <updated>2014-07-29T11:55:38+08:00</updated>
    <id>http://heeween.github.io/blog/bai-si-bu-de-jie-xiang-mu-zong-jie</id>
    <content type="html"><![CDATA[<h2>利用Quartz实现image缩放的技巧</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'>    <span class="c1">// 开启图形上下文</span>
</span><span class='line'>    <span class="n">UIGraphicsBeginImageContextWithOptions</span><span class="p">(</span><span class="n">topic</span><span class="p">.</span><span class="n">pictureF</span><span class="p">.</span><span class="n">size</span><span class="p">,</span> <span class="nb">YES</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 将下载完的image对象绘制到图形上下文</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">width</span> <span class="o">=</span> <span class="n">topic</span><span class="p">.</span><span class="n">pictureF</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">;</span>
</span><span class='line'>    <span class="n">CGFloat</span> <span class="n">height</span> <span class="o">=</span> <span class="n">width</span> <span class="o">*</span> <span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span> <span class="o">/</span> <span class="n">image</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="n">image</span> <span class="nl">drawInRect</span><span class="p">:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">)];</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 获得图片</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">imageView</span><span class="p">.</span><span class="n">image</span> <span class="o">=</span> <span class="n">UIGraphicsGetImageFromCurrentImageContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 结束图形上下文</span>
</span><span class='line'>    <span class="n">UIGraphicsEndImageContext</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://heeween.github.io/images/Snip20150729_13.png" alt="" /></p>

<h2>图片拉伸属性的区别</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">UIViewContentModeScaleAspectFit</span><span class="p">,</span>      <span class="c1">// contents scaled to fit with fixed aspect. remainder is transparent</span>
</span><span class='line'><span class="c1">// 宽且高都要缩放到iamgeview框中才可以</span>
</span><span class='line'><span class="n">UIViewContentModeScaleAspectFill</span><span class="p">,</span>     <span class="c1">// contents scaled to fill with fixed aspect. some portion of content may be clipped.</span>
</span><span class='line'><span class="c1">// 宽或者高缩放到imageView框中就可以</span>
</span></code></pre></td></tr></table></div></figure>


<h2>写入手机相册image的方法</h2>

<p><img src="http://heeween.github.io/images/Snip20150729_9.png" alt="" />
<img src="http://heeween.github.io/images/Snip20150729_10.png" alt="" /></p>

<h3>制作动画一般只用frame</h3>

<p><img src="http://heeween.github.io/images/Snip20150729_14.png" alt="" /></p>

<h2>弹簧效果的类</h2>

<p><img src="http://heeween.github.io/images/Snip20150729_15.png" alt="" /></p>

<h2>直接获得字符串的扩展名和变为小写的方法</h2>

<p><img src="http://heeween.github.io/images/Snip20150729_5.png" alt="" /></p>

<p><img src="http://heeween.github.io/images/Snip20150729_6.png" alt="" /></p>

<p><img src="http://heeween.github.io/images/Snip20150729_7.png" alt="" /></p>

<h2>SDWebimage自动解析image显示gif</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="p">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nf">setTopic:</span><span class="p">(</span><span class="n">HYWTopic</span> <span class="o">*</span><span class="p">)</span><span class="nv">topic</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">_topic</span> <span class="o">=</span> <span class="n">topic</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// 设置图片</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">imageView</span> <span class="nl">sd_setImageWithURL</span><span class="p">:[</span><span class="bp">NSURL</span> <span class="nl">URLWithString</span><span class="p">:</span><span class="n">topic</span><span class="p">.</span><span class="n">large_image</span><span class="p">]];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://heeween.github.io/images/Snip20150729_3.png" alt="" /></p>

<h2>SDwebimage下载任务的单独性</h2>

<p><img src="http://heeween.github.io/images/Snip20150729_12.png" alt="" /></p>

<h2>xib中不可以对imageview添加子控件</h2>

<p><img src="http://heeween.github.io/images/Snip20150729_8.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Textfield魔法效果实现]]></title>
    <link href="http://heeween.github.io/blog/2014-07-26-gao-fang-bai-si-bu-de-jie-zong-jie/"/>
    <updated>2014-07-26T21:24:27+08:00</updated>
    <id>http://heeween.github.io/blog/gao-fang-bai-si-bu-de-jie-zong-jie</id>
    <content type="html"><![CDATA[<h2>修改每个控制器的状态栏样式</h2>

<p><img src="http://heeween.github.io/images/Snip20150726_1.png" alt="" /></p>

<h2>设置button的圆角还需要同时设置clipstobound</h2>

<p><img src="http://heeween.github.io/images/Snip20150726_2.png" alt="" /></p>

<h2>寻找系统方法的步骤</h2>

<p><img src="http://heeween.github.io/images/Snip20150726_3.png" alt="" /></p>

<h2>有override注释的方法意味着是官方推荐改写以实现特定功能的</h2>

<p><img src="http://heeween.github.io/images/Snip20150726_4.png" alt="" /></p>

<h2>实现富文本,需要在上下文中调用字符串的draw方法</h2>

<p><img src="http://heeween.github.io/images/Snip20150726_5.png" alt="" /></p>

<h2>运行时可以找到某些系统的属性,然后使用KVC修改</h2>

<p><img src="http://heeween.github.io/images/Snip20150726_8.png" alt="" /></p>

<h2>textfield被点击后会调用setHightlighed方法</h2>

<p><img src="http://heeween.github.io/images/Snip20150726_9.png" alt="" /></p>

<h2>textfield成为和取消第一响应者会调用以下两个方法,可以在这两个方法添加个性化功能</h2>

<p><img src="http://heeween.github.io/images/Snip20150726_11.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自定义键盘与数组使用的坑]]></title>
    <link href="http://heeween.github.io/blog/2014-07-23-gao-fang-bai-si-bu-de-jie-xiang-mu-zong-jie/"/>
    <updated>2014-07-23T09:08:24+08:00</updated>
    <id>http://heeween.github.io/blog/gao-fang-bai-si-bu-de-jie-xiang-mu-zong-jie</id>
    <content type="html"><![CDATA[<h2>自定义键盘和键盘的工具条的属性</h2>

<p><img src="http://heeween.github.io/images/Snip20150723_1.png" alt="" /></p>

<h2>xib的File&rsquo;s owner的理解</h2>

<p><img src="http://heeween.github.io/images/Snip20150723_2.png" alt="" /></p>

<h2>可变数组和另一个数组拼接,一定要用addObjectsFromArray:方法</h2>

<ul>
<li>切记不要使用arrayM addObject:array</li>
<li>否则arrayM的对象数量就变成了1,结果就是把array这个数组对象放到了arrayM中</li>
<li>因此还按照角标取值就会数组越界,或者报对象找不到方法</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'> <span class="c1">// 网络请求</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">manager</span> <span class="nl">GET</span><span class="p">:</span><span class="s">@&quot;http://api.budejie.com/api/api_open.php&quot;</span> <span class="nl">parameters</span><span class="p">:</span><span class="n">params</span> <span class="nl">success</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="bp">NSURLSessionDataTask</span> <span class="o">*</span><span class="n">task</span><span class="p">,</span> <span class="kt">id</span> <span class="n">responseObject</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="p">[</span><span class="n">category</span><span class="p">.</span><span class="n">users</span> <span class="nl">addObjectsFromArray</span><span class="p">:[</span><span class="n">HYWRecommendUser</span> <span class="nl">objectArrayWithKeyValuesArray</span><span class="p">:</span><span class="n">responseObject</span><span class="p">[</span><span class="s">@&quot;list&quot;</span><span class="p">]]];</span>
</span><span class='line'>        <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">recommendUserTableView</span> <span class="n">reloadData</span><span class="p">];</span>
</span><span class='line'>    <span class="p">}</span> <span class="nl">failure</span><span class="p">:</span><span class="o">^</span><span class="p">(</span><span class="bp">NSURLSessionDataTask</span> <span class="o">*</span><span class="n">task</span><span class="p">,</span> <span class="bp">NSError</span> <span class="o">*</span><span class="n">error</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="n">HYWLog</span><span class="p">(</span><span class="s">@&quot;%@&quot;</span><span class="p">,</span><span class="n">error</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}];</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// TableView中每一个行的细节</span>
</span><span class='line'><span class="p">-</span> <span class="p">(</span><span class="bp">UITableViewCell</span> <span class="o">*</span><span class="p">)</span><span class="nf">tableView:</span><span class="p">(</span><span class="bp">UITableView</span> <span class="o">*</span><span class="p">)</span><span class="nv">tableView</span> <span class="nf">cellForRowAtIndexPath:</span><span class="p">(</span><span class="bp">NSIndexPath</span> <span class="o">*</span><span class="p">)</span><span class="nv">indexPath</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">HYWRecommendUserCell</span> <span class="o">*</span><span class="n">cell</span> <span class="o">=</span> <span class="p">[</span><span class="n">HYWRecommendUserCell</span> <span class="nl">cellWithTableView</span><span class="p">:</span><span class="n">tableView</span><span class="p">];</span>
</span><span class='line'>    <span class="n">cell</span><span class="p">.</span><span class="n">user</span> <span class="o">=</span> <span class="nb">self</span><span class="p">.</span><span class="n">recommentdCategory</span><span class="p">.</span><span class="n">users</span><span class="p">[</span><span class="n">indexPath</span><span class="p">.</span><span class="n">row</span><span class="p">];</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">cell</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// cell的set方法中</span>
</span><span class='line'>  <span class="o">-</span> <span class="p">(</span><span class="kt">void</span><span class="p">)</span><span class="nl">setUser</span><span class="p">:(</span><span class="n">HYWRecommendUser</span> <span class="o">*</span><span class="p">)</span><span class="n">user</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="n">_user</span> <span class="o">=</span> <span class="n">user</span><span class="p">;</span>
</span><span class='line'>    <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">headerView</span> <span class="nl">sd_setImageWithURL</span><span class="p">:[</span><span class="bp">NSURL</span> <span class="nl">URLWithString</span><span class="p">:</span><span class="n">user</span><span class="p">.</span><span class="n">header</span><span class="p">]</span> <span class="nl">placeholderImage</span><span class="p">:[</span><span class="bp">UIImage</span> <span class="nl">imageNamed</span><span class="p">:</span><span class="s">@&quot;defaultUserIcon&quot;</span><span class="p">]];</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">screen_name_label</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">user</span><span class="p">.</span><span class="n">screen_name</span><span class="p">;</span>
</span><span class='line'>    <span class="bp">NSInteger</span> <span class="n">fansCount</span> <span class="o">=</span> <span class="p">[</span><span class="n">user</span><span class="p">.</span><span class="n">fans_count</span> <span class="n">integerValue</span><span class="p">];</span>
</span><span class='line'>    <span class="nb">self</span><span class="p">.</span><span class="n">fans_count_label</span><span class="p">.</span><span class="n">text</span> <span class="o">=</span> <span class="n">fansCount</span> <span class="o">&gt;</span> <span class="mi">10000</span> <span class="o">?</span> <span class="p">[</span><span class="bp">NSString</span> <span class="nl">stringWithFormat</span><span class="p">:</span><span class="s">@&quot;%.1f人关注&quot;</span><span class="p">,</span><span class="n">fansCount</span> <span class="o">/</span><span class="mf">1000.0</span><span class="p">]</span> <span class="o">:</span> <span class="p">[</span><span class="bp">NSString</span> <span class="nl">stringWithFormat</span><span class="p">:</span><span class="s">@&quot;%zd人关注&quot;</span><span class="p">,</span><span class="n">fansCount</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>报错结果,数组找不到方法</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="mi">2015</span><span class="o">-</span><span class="mo">07</span><span class="o">-</span><span class="mi">24</span> <span class="mi">09</span><span class="o">:</span><span class="mi">15</span><span class="o">:</span><span class="mf">23.091</span> <span class="err">百思不得姐</span><span class="p">[</span><span class="mi">3711</span><span class="o">:</span><span class="mi">13214</span><span class="p">]</span> <span class="o">-</span><span class="p">[</span><span class="n">__NSArrayM</span> <span class="n">header</span><span class="p">]</span><span class="o">:</span> <span class="n">unrecognized</span> <span class="n">selector</span> <span class="n">sent</span> <span class="n">to</span> <span class="n">instance</span> <span class="mh">0x7fa6f45c8340</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[主流框架搭建常用技巧]]></title>
    <link href="http://heeween.github.io/blog/2014-07-22-bai-si-bu-de-qi-jie-xiang-mu-zong-jie/"/>
    <updated>2014-07-22T09:58:12+08:00</updated>
    <id>http://heeween.github.io/blog/bai-si-bu-de-qi-jie-xiang-mu-zong-jie</id>
    <content type="html"><![CDATA[<h2>通过appearance统一设置所有UITabBarItem的文字属性</h2>

<p><img src="http://heeween.github.io/images/Snip20150722_1.png" alt="" />
<img src="http://heeween.github.io/images/Snip20150722_2.png" alt="" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="c1">// </span>
</span><span class='line'><span class="c1">// 后面带有UI_APPEARANCE_SELECTOR的方法, 都可以通过appearance对象来统一设置</span>
</span><span class='line'><span class="bp">NSMutableDictionary</span> <span class="o">*</span><span class="n">attrs</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSMutableDictionary</span> <span class="n">dictionary</span><span class="p">];</span>
</span><span class='line'><span class="n">attrs</span><span class="p">[</span><span class="n">NSFontAttributeName</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIFont</span> <span class="nl">systemFontOfSize</span><span class="p">:</span><span class="mi">12</span><span class="p">];</span>
</span><span class='line'><span class="n">attrs</span><span class="p">[</span><span class="n">NSForegroundColorAttributeName</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">grayColor</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="bp">NSMutableDictionary</span> <span class="o">*</span><span class="n">selectedAttrs</span> <span class="o">=</span> <span class="p">[</span><span class="bp">NSMutableDictionary</span> <span class="n">dictionary</span><span class="p">];</span>
</span><span class='line'><span class="n">selectedAttrs</span><span class="p">[</span><span class="n">NSFontAttributeName</span><span class="p">]</span> <span class="o">=</span> <span class="n">attrs</span><span class="p">[</span><span class="n">NSFontAttributeName</span><span class="p">];</span>
</span><span class='line'><span class="n">selectedAttrs</span><span class="p">[</span><span class="n">NSForegroundColorAttributeName</span><span class="p">]</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UIColor</span> <span class="n">darkGrayColor</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="bp">UITabBarItem</span> <span class="o">*</span><span class="n">item</span> <span class="o">=</span> <span class="p">[</span><span class="bp">UITabBarItem</span> <span class="n">appearance</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">item</span> <span class="nl">setTitleTextAttributes</span><span class="p">:</span><span class="n">attrs</span> <span class="nl">forState</span><span class="p">:</span><span class="n">UIControlStateNormal</span><span class="p">];</span>
</span><span class='line'><span class="p">[</span><span class="n">item</span> <span class="nl">setTitleTextAttributes</span><span class="p">:</span><span class="n">selectedAttrs</span> <span class="nl">forState</span><span class="p">:</span><span class="n">UIControlStateSelected</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<h2>在分类中声明@property, 只会生成方法的声明, 不会生成方法的实现和带有_下划线的成员变量</h2>

<p><img src="http://heeween.github.io/images/Snip20150722_5.png" alt="" /></p>

<h2>在TabBar中访问子控制器的view,会把子控制器view提前加载,影响性能</h2>

<p><img src="http://heeween.github.io/images/Snip20150722_3.png" alt="" /></p>

<h2>如果想要访问苹果私有的类,可以使用NSClassFromString方法,实现</h2>

<p><img src="http://heeween.github.io/images/Snip20150722_4.png" alt="" /></p>

<h2>在navigation控制器的push方法可以统一设置子控制器某些特性</h2>

<p><img src="http://heeween.github.io/images/Snip20150722_8.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用SVN协同开发Xcode项目]]></title>
    <link href="http://heeween.github.io/blog/2014-07-19-shi-yong-svnxie-tong-kai-fa-xcodexiang-mu/"/>
    <updated>2014-07-19T16:05:57+08:00</updated>
    <id>http://heeween.github.io/blog/shi-yong-svnxie-tong-kai-fa-xcodexiang-mu</id>
    <content type="html"><![CDATA[<h3>使用Cornerstone创建代码仓库,协同开发</h3>

<ul>
<li>使用Cornerstone提交代码</li>
</ul>


<p><img src="http://heeween.github.io/images/Snip20150719_30.png" alt="" /></p>

<ul>
<li>使用Xcode提交代码</li>
</ul>


<p><img src="http://heeween.github.io/images/Snip20150719_31.png" alt="" /></p>

<ul>
<li>Xcode提交会提交很多额外的,不需要提交给同事的内容</li>
</ul>


<p><img src="http://heeween.github.io/images/Snip20150719_32.png" alt="" /></p>

<ul>
<li><p>Cornerstone可以选择提交</p></li>
<li><p>Xcode需要忽略的文件和不可以忽略的文件</p></li>
</ul>


<p><img src="http://heeween.github.io/images/Snip20150719_33.png" alt="" />
<img src="http://heeween.github.io/images/Snip20150719_34.png" alt="" /></p>

<ul>
<li>Xcode的冲突</li>
</ul>


<p><img src="http://heeween.github.io/images/Snip20150719_35.png" alt="" />
<img src="http://heeween.github.io/images/Snip20150719_36.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SVN搭建和使用]]></title>
    <link href="http://heeween.github.io/blog/2014-07-19-svnda-jian-he-shi-yong/"/>
    <updated>2014-07-19T10:19:37+08:00</updated>
    <id>http://heeween.github.io/blog/svnda-jian-he-shi-yong</id>
    <content type="html"><![CDATA[<h3>安装服务端软件</h3>

<p><img src="http://heeween.github.io/images/Snip20150719_4.png" alt="" /></p>

<h3>配置服务端仓库和权限等</h3>

<ul>
<li>选empty仓库</li>
<li>选nobody权限,不让任何人访问</li>
</ul>


<p><img src="http://heeween.github.io/images/Snip20150719_5.png" alt="" /></p>

<h3>创建用户配置权限</h3>

<p><img src="http://heeween.github.io/images/Snip20150719_7.png" alt="" /></p>

<p><img src="http://heeween.github.io/images/Snip20150719_9.png" alt="" /></p>

<h3>创建工作组,方便整体切换到其他工作项目</h3>

<p><img src="http://heeween.github.io/images/Snip20150719_10.png" alt="" /></p>

<h3>在客户端访问服务端</h3>

<p><img src="http://heeween.github.io/images/Snip20150719_11.png" alt="" /></p>

<h3>终端命令</h3>

<p><img src="http://heeween.github.io/images/Snip20150719_12.png" alt="" /></p>

<h3>在经理工作组账号里初始化代码</h3>

<p><img src="http://heeween.github.io/images/Snip20150719_14.png" alt="" />
<img src="http://heeween.github.io/images/Snip20150719_16.png" alt="" />
<img src="http://heeween.github.io/images/Snip20150719_17.png" alt="" />
<img src="http://heeween.github.io/images/Snip20150719_18.png" alt="" />
<img src="http://heeween.github.io/images/Snip20150719_20.png" alt="" /></p>

<h3>删除代码</h3>

<p><img src="http://heeween.github.io/images/Snip20150719_21.png" alt="" /></p>

<h3>多人开发</h3>

<p><img src="http://heeween.github.io/images/Snip20150719_21.png" alt="" />
<img src="http://heeween.github.io/images/Snip20150719_22.png" alt="" />
<img src="http://heeween.github.io/images/Snip20150719_23.png" alt="" /></p>

<h3>多人开发冲突如何解决</h3>

<p><img src="http://heeween.github.io/images/Snip20150719_1.png" alt="" /></p>
]]></content>
  </entry>
  
</feed>
